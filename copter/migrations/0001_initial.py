# Generated by Django 2.1.1 on 2018-09-11 06:18

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AerialPosition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relative_altitude', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='GpsPosition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude', models.FloatField(default=0.0)),
                ('longitude', models.FloatField(default=0.0)),
            ],
        ),
        migrations.CreateModel(
            name='MavlinkArm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('armed', models.BooleanField(default=False)),
                ('attempt_arm', models.BooleanField(default=False)),
                ('arm_status_message', models.TextField(default='failed')),
            ],
        ),
        migrations.CreateModel(
            name='MavlinkConnect',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('connected', models.BooleanField(default=False)),
                ('connection_baud_rate', models.IntegerField(default=115200)),
                ('attempt_connect', models.BooleanField(default=False)),
                ('connection_port', models.TextField(default='tcp:127.0.0.1:5760')),
                ('connection_status_message', models.TextField(default='Not connected')),
            ],
        ),
        migrations.CreateModel(
            name='MavlinkData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firmware_version', models.TextField(default='')),
                ('longitude', models.DecimalField(decimal_places=8, default=0, max_digits=11)),
                ('latitude', models.DecimalField(decimal_places=8, default=0, max_digits=11)),
                ('altitude', models.DecimalField(decimal_places=4, default=0, max_digits=7)),
                ('velocity', models.TextField(default='')),
                ('gps', models.TextField(default='')),
                ('groundspeed', models.TextField(default='')),
                ('airspeed', models.TextField(default='')),
                ('ekf_ok', models.TextField(default='')),
                ('battery', models.TextField(default='')),
                ('last_heartbeat', models.TextField(default='')),
                ('heading', models.TextField(default='')),
                ('mode', models.TextField(default='')),
                ('armed', models.TextField(default='')),
                ('system_status', models.TextField(default='')),
                ('home_location_lon', models.DecimalField(decimal_places=8, default=0, max_digits=11)),
                ('home_location_lat', models.DecimalField(decimal_places=8, default=0, max_digits=11)),
                ('home_location_alt_abs', models.DecimalField(decimal_places=4, default=0, max_digits=7)),
            ],
        ),
        migrations.CreateModel(
            name='MavlinkEngine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('engine_running', models.BooleanField(default=False)),
                ('engine_attempt_running', models.BooleanField(default=False)),
                ('engine_terminate', models.BooleanField(default=False)),
                ('engine_status_message', models.TextField(default='')),
            ],
        ),
        migrations.CreateModel(
            name='MavlinkGoTo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guided_waypoint_longitude', models.FloatField(default=0)),
                ('guided_waypoint_latitude', models.FloatField(default=0)),
                ('guided_waypoint_altitude', models.FloatField(default=0)),
                ('guided_waypoint_confirmed', models.BooleanField(default=False)),
                ('guided_waypoint_message', models.TextField(default='System Idle')),
            ],
        ),
        migrations.CreateModel(
            name='MavlinkMission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_mission_running', models.BooleanField(default=False)),
                ('is_attempt_mission', models.BooleanField(default=False)),
                ('mission_status_message', models.TextField(default='No message')),
            ],
        ),
        migrations.CreateModel(
            name='Waypoint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(db_index=True)),
                ('accomplished', models.BooleanField(default=False)),
                ('aerial_position', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='copter.AerialPosition')),
            ],
        ),
        migrations.AddField(
            model_name='mavlinkmission',
            name='waypoint_list',
            field=models.ManyToManyField(related_name='waypoint_list', to='copter.Waypoint'),
        ),
        migrations.AddField(
            model_name='mavlinkgoto',
            name='guided_waypoint_list',
            field=models.ManyToManyField(related_name='guided_list', to='copter.Waypoint'),
        ),
        migrations.AddField(
            model_name='aerialposition',
            name='gps_position',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='copter.GpsPosition'),
        ),
    ]
